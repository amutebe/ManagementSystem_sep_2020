# Generated by Django 3.0.2 on 2020-11-10 09:07

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import multiselectfield.db.fields


class Migration(migrations.Migration):

    dependencies = [
        ('issues_9001', '0092_auto_20201110_1207'),
        ('accounts', '0092_auto_20201110_1207'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('operations_9001', '0091_auto_20201106_1726'),
    ]

    operations = [
        migrations.AlterField(
            model_name='maintenance',
            name='maintenance_number',
            field=models.CharField(default='TEGA-M-10112020235', max_length=200, primary_key=True, serialize=False, verbose_name='Maintenance no.:'),
        ),
        migrations.AlterField(
            model_name='mod9001_calibration',
            name='calibration_number',
            field=models.CharField(default='TEGA-C-10112020271', max_length=200, primary_key=True, serialize=False, verbose_name='Calibration no.:'),
        ),
        migrations.AlterField(
            model_name='mod9001_changeregister',
            name='req_no',
            field=models.CharField(default='Comp-RFC-Q-10112020258', max_length=200, primary_key=True, serialize=False, verbose_name='Request No.:'),
        ),
        migrations.AlterField(
            model_name='mod9001_correctiveaction',
            name='car_no',
            field=models.CharField(default='Comp-CAR-Q-10112020288', max_length=200, primary_key=True, serialize=False, verbose_name='CAR No.:'),
        ),
        migrations.AlterField(
            model_name='mod9001_customercomplaint',
            name='comp_no',
            field=models.CharField(default='Comp-COMP-Q-10112020243', max_length=200, primary_key=True, serialize=False, verbose_name='Complaint No.:'),
        ),
        migrations.AlterField(
            model_name='mod9001_document_manager',
            name='document_number',
            field=models.CharField(default='TEGA-Q-10112020152', max_length=200, primary_key=True, serialize=False, verbose_name='Document no.:'),
        ),
        migrations.AlterField(
            model_name='mod9001_processtable',
            name='process_number',
            field=models.CharField(default='Comp-Pr-10112020174', max_length=200, primary_key=True, serialize=False, verbose_name='Process ID:'),
        ),
        migrations.AlterField(
            model_name='mod9001_providerassessment',
            name='emp_perfrev_no',
            field=models.CharField(default='Comp-EA-Q-10112020162', max_length=200, primary_key=True, serialize=False, verbose_name='Performance Review No.:'),
        ),
        migrations.AlterField(
            model_name='mod9001_qmsplanner',
            name='planner_number',
            field=models.CharField(default='Comp-QP-10112020276', max_length=200, primary_key=True, serialize=False, verbose_name='Planner no.:'),
        ),
        migrations.AlterField(
            model_name='mod9001_trainingplanner',
            name='plan_number',
            field=models.CharField(default='Comp-TP-10112020140', max_length=200, primary_key=True, serialize=False, verbose_name='Plan no.:'),
        ),
        migrations.AlterField(
            model_name='mod9001_trainingregister',
            name='training_number',
            field=models.CharField(default='Comp-TR-10112020225', max_length=200, primary_key=True, serialize=False, verbose_name='Training no.:'),
        ),
        migrations.CreateModel(
            name='mod9001_customerSatisfaction',
            fields=[
                ('satis_no', models.CharField(default='Comp-CS-Q-10112020139', max_length=200, primary_key=True, serialize=False, verbose_name='Satisfaction Survey No.:')),
                ('year', models.DateField(null=True, verbose_name='Survey Period:')),
                ('rank', models.CharField(blank=True, max_length=25, null=True, verbose_name='Final Ranking: (Scores 1 to 11 are required)')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Comment')),
                ('improvplan', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('1', 'Response Time'), ('2', 'Ressolution Time'), ('3', 'Delivery Time'), ('4', 'Communication'), ('5', 'Complaint Handling'), ('6', 'Quality of Product/Service'), ('7', 'Information Security'), ('8', 'Customer Services'), ('9', 'Other')], max_length=17, null=True, verbose_name='Improvement Plan')),
                ('details', models.TextField(blank=True, null=True, verbose_name='Additional Details')),
                ('due', models.DateTimeField(null=True, verbose_name='Due Date:')),
                ('date_today', models.DateField(default=datetime.datetime.now, verbose_name='Date created:')),
                ('verification_status', models.CharField(blank=True, max_length=200, null=True)),
                ('verification_failed', models.TextField(blank=True, help_text='If rejected, please give a reason', null=True, verbose_name='Reason for rejecting:')),
                ('scheduled', models.DateField(blank=True, null=True, verbose_name='Rescheduled Date:')),
                ('completion', models.DateField(blank=True, null=True, verbose_name='Completion Date:')),
                ('assignedto', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.employees', verbose_name='Assigned to:')),
                ('communication', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comm', to='operations_9001.providerparameters', verbose_name='4. Communication:')),
                ('compliant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='handlin', to='operations_9001.providerparameters', verbose_name='5. Complaint Handling:')),
                ('customerservice', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cus', to='operations_9001.providerparameters', verbose_name='8. Customer Services:')),
                ('delivery', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='delivtime', to='operations_9001.providerparameters', verbose_name='3. Delivery Time:')),
                ('entered_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ente', to=settings.AUTH_USER_MODEL)),
                ('infosecurity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='securit', to='operations_9001.providerparameters', verbose_name='7. Information Security:')),
                ('organisation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='operations_9001.mod9001_supplieregistration', verbose_name='Customer Organisation:')),
                ('qmsstatus', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='operations_9001.qmsstatus', verbose_name='Verification Status:')),
                ('quality', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='serv', to='operations_9001.providerparameters', verbose_name='6. Quality of Product/Service:')),
                ('resolution', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='resotime', to='operations_9001.providerparameters', verbose_name='2. Ressolution Time:')),
                ('responsetime', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='resptime', to='operations_9001.providerparameters', verbose_name='1. Response Time:')),
                ('status', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='issues_9001.approval_status', verbose_name='Status:')),
                ('verification', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='issues_9001.RISK_OPPverification', verbose_name='Verification:')),
            ],
        ),
    ]
