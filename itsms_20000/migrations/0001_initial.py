# Generated by Django 3.2.3 on 2021-07-16 11:06

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import multiselectfield.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('issues_9001', '0161_auto_20210716_1406'),
        ('operations_9001', '0161_auto_20210716_1406'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('accounts', '0161_auto_20210716_1406'),
    ]

    operations = [
        migrations.CreateModel(
            name='component',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=50, null=True, verbose_name='Component:')),
            ],
        ),
        migrations.CreateModel(
            name='IT_service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=50, null=True, verbose_name='IT Service:')),
            ],
        ),
        migrations.CreateModel(
            name='priority',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=50, null=True, verbose_name='Priority:')),
            ],
        ),
        migrations.CreateModel(
            name='scope',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=50, null=True, verbose_name='Scope:')),
            ],
        ),
        migrations.CreateModel(
            name='service_category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=50, null=True, verbose_name='Category:')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceRequest_mode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=50, null=True, verbose_name='Request Mode:')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceRequest_type',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=50, null=True, verbose_name='Request Type:')),
            ],
        ),
        migrations.CreateModel(
            name='mod20000_service_request',
            fields=[
                ('service_number', models.CharField(max_length=200, primary_key=True, serialize=False, verbose_name='SR ID.:')),
                ('date', models.DateField(verbose_name='Request Date:')),
                ('time', models.TimeField(null=True, verbose_name='Time (24Hr):')),
                ('other', models.TextField(blank=True, null=True, verbose_name='Details')),
                ('date_today', models.DateField(default=datetime.datetime.now, verbose_name='Date created:')),
                ('planning_flag', models.TextField(blank=True, default='No', help_text='To be uses while filtering serive requests pending planning', null=True, verbose_name='Service planning Done?')),
                ('IT_service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='itsms_20000.it_service', verbose_name='IT service:')),
                ('entered_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('priority', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='itsms_20000.priority', verbose_name='Priority:')),
                ('request_mode', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='itsms_20000.servicerequest_mode', verbose_name='Request Mode:')),
                ('request_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='itsms_20000.servicerequest_type', verbose_name='Request Type:')),
            ],
        ),
        migrations.CreateModel(
            name='mod20000_service_planning',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resource', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('1', 'Transport'), ('2', 'Tools'), ('3', 'License'), ('4', 'Software'), ('5', 'Internet'), ('6', 'Desktop/Laptop'), ('7', 'Voice/Telephone'), ('8', 'Docuentation'), ('9', 'Other')], max_length=17, null=True, verbose_name='Resources')),
                ('dependency', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('1', 'Hardware/ Software Supplies'), ('2', 'IT Support Services'), ('3', 'Installation and Configuration Services'), ('4', 'Procurement Services'), ('5', 'Repair and Maintenance Services'), ('6', 'Storage Services'), ('7', 'CCTV Security Services'), ('8', 'Access and Security (AD, Firewall)'), ('9', 'Backup and Maintenance'), ('10', 'Internet Services'), ('11', 'Communication Services (Email, Telephone and PABX)'), ('12', 'Backup and Maintenance'), ('13', 'Personal Computing (PCs, Printers, Accessories, Software, Apps. etc.)'), ('14', 'Other')], max_length=32, null=True, verbose_name='Depandency on other services:')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Additional Description:')),
                ('activities', models.TextField(blank=True, null=True, verbose_name='Key Activities:')),
                ('criteria', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('1', 'Job card'), ('2', 'Completion report/Certificate'), ('3', 'Customer sign off acknowledgement')], max_length=5, null=True, verbose_name='Criteria')),
                ('completion', models.DateField(blank=True, null=True, verbose_name='Completion Date:')),
                ('report_number', models.TextField(blank=True, null=True, verbose_name='Report No.:')),
                ('completion_date', models.DateField(blank=True, null=True, verbose_name='Completion Date:')),
                ('error', models.TextField(blank=True, null=True, verbose_name='Known Error:')),
                ('Solution', models.TextField(blank=True, null=True, verbose_name='Solution:')),
                ('remark', models.TextField(blank=True, null=True, verbose_name='Remarks:')),
                ('verification_status', models.CharField(blank=True, max_length=200, null=True)),
                ('verification_failed', models.TextField(blank=True, help_text='If rejected, please give a reason', null=True, verbose_name='Reason for rejecting:')),
                ('scheduled', models.DateField(blank=True, null=True, verbose_name='Rescheduled Date:')),
                ('due', models.DateField(blank=True, null=True, verbose_name='When:')),
                ('date_today', models.DateField(default=datetime.datetime.now, verbose_name='Date created:')),
                ('assigned', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='AssignedTo:')),
                ('completedby', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.employees', verbose_name='Completed by:')),
                ('component_affected', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='itsms_20000.component', verbose_name='Component Affected:')),
                ('entered_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='planning', to=settings.AUTH_USER_MODEL)),
                ('qmsstatus', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='operations_9001.qmsstatus', verbose_name='Verification Status:')),
                ('service_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='itsms_20000.service_category', verbose_name='Service Category:')),
                ('service_number', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='itsms_20000.mod20000_service_request', verbose_name='SR ID:')),
                ('service_scope', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='itsms_20000.scope', verbose_name='Service scope:')),
                ('status', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='issues_9001.approval_status', verbose_name='Status:')),
                ('verification', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='issues_9001.risk_oppverification', verbose_name='Verification:')),
            ],
        ),
    ]
